name: Lighthouse CI

# Only run on main branch pushes (merges)
on:
  push:
    branches: [ main, master ]

jobs:
  lighthouse:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        # Need history to push to performance-data branch
        fetch-depth: 0
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 9.1.0
        
    - name: Get pnpm store directory
      id: pnpm-cache
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
        
    - name: Cache pnpm store
      uses: actions/cache@v4
      with:
        path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-
          
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Build application
      run: pnpm build
      
    - name: Run Lighthouse CI
      run: |
        echo "ðŸ”¦ Running Lighthouse CI performance checks..."
        npx lhci autorun --config=./lighthouserc.json
      env:
        LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
        
    - name: Upload Lighthouse results
      uses: actions/upload-artifact@v4
      with:
        name: lighthouse-results
        path: .lighthouseci/
        
    - name: Format results as JSON
      run: node scripts/generate-lighthouse-summary.mjs > lighthouse-summary.md
        
    - name: Save metrics to performance-data branch
      run: |
        # Configure git
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        
        # Create or checkout performance-data branch
        git checkout performance-data 2>/dev/null || git checkout -b performance-data
        
        # Create directory structure if needed
        mkdir -p data/lighthouse
        
        # Copy metrics file with timestamp
        TIMESTAMP=$(date +%Y%m%d_%H%M%S)
        cp lighthouse-metrics.json "data/lighthouse/${TIMESTAMP}_${GITHUB_SHA:0:7}.json"
        
        # Update latest.json
        cp lighthouse-metrics.json data/lighthouse/latest.json
        
        # Commit and push
        git add data/lighthouse/
        git commit -m "Add Lighthouse metrics for ${GITHUB_SHA:0:7}" || echo "No changes to commit"
        git push origin performance-data --force-with-lease || git push origin performance-data
        
    - name: Comment on commit
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const summary = fs.readFileSync('lighthouse-summary.md', 'utf8');
          
          await github.rest.repos.createCommitComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            commit_sha: context.sha,
            body: summary
          });