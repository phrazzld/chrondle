name: CI/CD Pipeline with Regression Detection

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 9.1.0
        
    - name: Get pnpm store directory
      id: pnpm-cache
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
        
    - name: Cache pnpm store
      uses: actions/cache@v4
      with:
        path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-
          
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Cache Convex generated files
      id: convex-cache
      uses: actions/cache@v4
      with:
        path: convex/_generated
        key: ${{ runner.os }}-convex-${{ hashFiles('convex/schema.ts', 'convex/**/*.ts') }}
        restore-keys: |
          ${{ runner.os }}-convex-
      
    - name: Generate Convex files
      if: steps.convex-cache.outputs.cache-hit != 'true'
      run: npx convex codegen
      env:
        CONVEX_DEPLOYMENT: fleet-goldfish-183
      
    - name: Run linting
      run: pnpm lint
      
    - name: Run type checking
      run: pnpm type-check
      
    - name: Run tests (parallel)
      run: pnpm test:ci
      env:
        NODE_ENV: test
      
    - name: Run puzzle validation
      run: pnpm validate-puzzles
      
    - name: Test module system compatibility
      run: pnpm test-module-system

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 9.1.0
        
    - name: Get pnpm store directory
      id: pnpm-cache
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
        
    - name: Cache pnpm store
      uses: actions/cache@v4
      with:
        path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-
          
    - name: Cache Next.js build
      uses: actions/cache@v4
      with:
        path: |
          .next/cache
          .next/.next-build-cache
        key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/pnpm-lock.yaml') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
        restore-keys: |
          ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/pnpm-lock.yaml') }}-
          ${{ runner.os }}-nextjs-
          
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Cache Convex generated files
      id: convex-cache
      uses: actions/cache@v4
      with:
        path: convex/_generated
        key: ${{ runner.os }}-convex-${{ hashFiles('convex/schema.ts', 'convex/**/*.ts') }}
        restore-keys: |
          ${{ runner.os }}-convex-
      
    - name: Generate Convex files
      if: steps.convex-cache.outputs.cache-hit != 'true'
      run: npx convex codegen
      env:
        CONVEX_DEPLOYMENT: fleet-goldfish-183
      
    - name: Build application
      run: pnpm build
      env:
        NEXT_PUBLIC_CONVEX_URL: https://fleet-goldfish-183.convex.cloud
        NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: pk_test_aGVhbHRoeS1kb2UtMjMuY2xlcmsuYWNjb3VudHMuZGV2JA
      
    - name: Check bundle size
      run: pnpm size
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-output
        path: .next/